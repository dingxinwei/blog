<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20210731T054205Z" application="Evernote/Windows" version="6.x">
<note><title>express的本质</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><ul><li><div><span style="font-size: 16pt;">express的本质</span></div></li></ul><div>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <span style="font-size: 12pt;">&nbsp;</span> <span style="font-size: 12pt;">express通过工厂函数（</span><span style="font-size: 12pt;">createApplication</span><span style="font-size: 12pt;">）生成了一个函数，生成的函数作为http.</span><span style="font-size: 12pt;">createServer的回调函数，当请求来的时候会调用这个回调函数对请求进行处理。</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&nbsp; 原生创建http server&nbsp;</div><div>&nbsp; consthttp = require(&apos;http&apos;);</div><div>&nbsp;&nbsp;http.createServer(req, res =&gt; {</div><div>&nbsp; &nbsp; //对请求进行处理</div><div><br/></div><div>&nbsp;&nbsp;}).listen(3000);</div></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span style="font-size: 9pt; color: rgb(51, 51, 51); font-family: Monaco;">&nbsp; 使用express</span></div><div>&nbsp;const express = require(&apos;express&apos;);</div><div>&nbsp;const http = require(&apos;http&apos;);</div><div>&nbsp;const app = express();</div><div>&nbsp;app.get(&apos;/&apos;, (req,res) =&gt; {</div><div>&nbsp; &nbsp; //处理请求</div><div>&nbsp;&nbsp; &nbsp;</div><div>&nbsp;})</div><div>&nbsp;http.createServer(app).listen(3000);</div></div><div><br/></div><div><br/></div><div><span style="font-size: 12pt;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></div><ul><li><div><span style="font-size: 16pt;">中间件的原理</span></div></li></ul><div><span style="font-size: 16pt;">&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</span> <span style="font-size: 12pt;">中间件其实就是一个函数，当请求来了express根据url来匹配中间件，如果匹配成功则调用对应的中间件。express使用了异步串行来执行中间件，执行顺序和在代码中的定义的顺序相同，异步串行的实现是把所有的中间件按照定义时的顺序加入到一个数组中去，执行的时候从数组中取出并执行，执行的时候如果调用了next函数则取出下一个中间件进行执行，没有调用next则结束中间件的调用。</span></div><div><br/></div><div><br/></div><div><br/></div></div></en-note>]]></content><created>20210710T124130Z</created><updated>20210710T132303Z</updated><tag>express原理</tag><note-attributes><author>回忆</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
